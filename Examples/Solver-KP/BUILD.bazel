#load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library")

cc_binary(
    name = "app_KP01_generic",
    srcs = [
        "src/solver_kp01_generic/mainSolverKP.cpp",
        "src/solver_kp01_generic/solver_kp01_generic.cpp",  # must include library impl
    ],
    #copts = [
    #    "-std=c++17",
    #    "-fconcepts",
    #    "-Wfatal-errors",
    #],
    deps = [
        "solver_kp01_generic_lib",
        "@OptFrame//include:OptFCore",
    ],
)

# this is a shared library
cc_binary(
    name = "solver_kp01_generic",
    copts = [
        "-std=c++20",
    #    "-Wfatal-errors",
    ],
    linkshared = 1,
    deps = ["solver_kp01_generic_lib"],  # just include lib files here
)

# this library is not a binary! see version with linkshared=1
cc_library(
    name = "solver_kp01_generic_lib",
    hdrs = [
        "src/solver_kp01_generic/solver_kp01_generic.cpp",
        "src/solver_kp01_generic/solver_kp01_generic.h",
    ],
    strip_include_prefix = "src/",
    deps = [
        "solver_kp01_generic_hpp",
        "@OptFrame//include:OptFCore",
    ],
)

# these are all important included files
cc_library(
    name = "solver_kp01_generic_hpp",
    hdrs = glob([
        "src/solver_kp01_generic/**/*.hpp",
    ]),
    strip_include_prefix = "src/",
    deps = [
        "nlohmann",
        "@OptFrame//include:OptFCore",
    ],
)

# thirdparty json library
cc_library(
    name = "nlohmann",
    hdrs = glob([
        "libs/nlohmann/**/*.hpp",
    ]),
    strip_include_prefix = "libs/",
)
